{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/hueman/source/vendor/titillium-web/styles.css","path":"vendor/titillium-web/styles.css","modified":1},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","path":"vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","modified":1},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","path":"vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","modified":1},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","path":"vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","modified":1},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","path":"vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","modified":1},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","path":"vendor/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","modified":1},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","path":"vendor/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","modified":1},{"_id":"themes/hueman/source/vendor/source-code-pro/styles.css","path":"vendor/source-code-pro/styles.css","modified":1},{"_id":"themes/hueman/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":1},{"_id":"themes/hueman/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":1},{"_id":"themes/hueman/source/vendor/scrollLoading/style.css","path":"vendor/scrollLoading/style.css","modified":1},{"_id":"themes/hueman/source/vendor/scrollLoading/main.js","path":"vendor/scrollLoading/main.js","modified":1},{"_id":"themes/hueman/source/vendor/scrollLoading/jquery.scrollLoading.js","path":"vendor/scrollLoading/jquery.scrollLoading.js","modified":1},{"_id":"themes/hueman/source/vendor/scrollLoading/images/preloader@2x.gif","path":"vendor/scrollLoading/images/preloader@2x.gif","modified":1},{"_id":"themes/hueman/source/vendor/scrollLoading/images/preloader.gif","path":"vendor/scrollLoading/images/preloader.gif","modified":1},{"_id":"themes/hueman/source/vendor/jquery/2.0.3/jquery.min.js","path":"vendor/jquery/2.0.3/jquery.min.js","modified":1},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendor/font-awesome/fonts/fontawesome-webfont.woff2","modified":1},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.woff","path":"vendor/font-awesome/fonts/fontawesome-webfont.woff","modified":1},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendor/font-awesome/fonts/fontawesome-webfont.ttf","modified":1},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.svg","path":"vendor/font-awesome/fonts/fontawesome-webfont.svg","modified":1},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.eot","path":"vendor/font-awesome/fonts/fontawesome-webfont.eot","modified":1},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/FontAwesome.otf","path":"vendor/font-awesome/fonts/FontAwesome.otf","modified":1},{"_id":"themes/hueman/source/vendor/font-awesome/css/font-awesome.min.css","path":"vendor/font-awesome/css/font-awesome.min.css","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/jquery.fancybox.pack.js","path":"vendor/fancybox/jquery.fancybox.pack.js","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/jquery.fancybox.js","path":"vendor/fancybox/jquery.fancybox.js","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/jquery.fancybox.css","path":"vendor/fancybox/jquery.fancybox.css","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.js","path":"vendor/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.css","path":"vendor/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-media.js","path":"vendor/fancybox/helpers/jquery.fancybox-media.js","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-buttons.js","path":"vendor/fancybox/helpers/jquery.fancybox-buttons.js","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-buttons.css","path":"vendor/fancybox/helpers/jquery.fancybox-buttons.css","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/helpers/fancybox_buttons.png","path":"vendor/fancybox/helpers/fancybox_buttons.png","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_sprite@2x.png","path":"vendor/fancybox/fancybox_sprite@2x.png","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_sprite.png","path":"vendor/fancybox/fancybox_sprite.png","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_overlay.png","path":"vendor/fancybox/fancybox_overlay.png","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_loading@2x.gif","path":"vendor/fancybox/fancybox_loading@2x.gif","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_loading.gif","path":"vendor/fancybox/fancybox_loading.gif","modified":1},{"_id":"themes/hueman/source/vendor/fancybox/blank.gif","path":"vendor/fancybox/blank.gif","modified":1},{"_id":"themes/hueman/source/js/main.js","path":"js/main.js","modified":1},{"_id":"themes/hueman/source/css/style.styl","path":"css/style.styl","modified":1},{"_id":"themes/hueman/source/css/images/thumb-default.png","path":"css/images/thumb-default.png","modified":1},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":1},{"_id":"themes/hueman/source/css/images/s-left.png","path":"css/images/s-left.png","modified":1},{"_id":"themes/hueman/source/css/images/opacity-10.png","path":"css/images/opacity-10.png","modified":1},{"_id":"themes/hueman/source/css/images/logo-header.png","path":"css/images/logo-header.png","modified":1}],"Cache":[{"_id":"source/_posts/Hexo + Github搭建自己的博客.md","shasum":"373639a871b25cdeb19da4bd97a24c3ddbb86a3d","modified":1456465386000},{"_id":"source/_posts/MySQL连接问题123.md","shasum":"b6688d2e60860f5be392c5a2711d9de07f9fe7d0","modified":1456455684000},{"_id":"source/_posts/LMAX-Distruptor.md","shasum":"6ac85ad8eb1c2c1d93f1ad35d58c497527326aa5","modified":1456385338000},{"_id":"source/_posts/K-近临算法.md","shasum":"42c76b56ca596594211473e87a7a6d64a3243c42","modified":1456378906000},{"_id":"source/_posts/P-Unit结合JUnit做并发性能测试.md","shasum":"32626b9aae98a5e0e2b57c829832ba221cd0b64e","modified":1456378790000},{"_id":"source/_posts/使用ID3生成决策树.md","shasum":"887ad6c541b8acdc742cec65b6f3cf6a4fd277df","modified":1456457281000},{"_id":"source/about/index.md","shasum":"344e6d670399da9a401246620b646f70e68b25d6","modified":1456384047000},{"_id":"themes/hueman/README.md","shasum":"19244590bc775eba6566007a436b06d7ace8e42b","modified":1456328980000},{"_id":"themes/hueman/_config.yml","shasum":"1dc2528f18b4f54ad258188bbd347770060b78ca","modified":1456383899000},{"_id":"themes/hueman/languages/en.yml","shasum":"f41c4ca0d39e630becaac0a1c8602ba5296535a6","modified":1456328980000},{"_id":"themes/hueman/LICENSE","shasum":"3975b7883caeb33f61fada7c0ef4add7ab189849","modified":1456328980000},{"_id":"themes/hueman/languages/es.yml","shasum":"ba9bc234078220eed7383c9880e78232fd704897","modified":1456328980000},{"_id":"themes/hueman/languages/fr.yml","shasum":"0094a977597bbdb8254c60c81011ebf9b182d1e3","modified":1456328980000},{"_id":"themes/hueman/languages/pt-BR.yml","shasum":"1302d56d7348d03a7425fcb2c6d3deeb3eafbe91","modified":1456328980000},{"_id":"themes/hueman/languages/id.yml","shasum":"ae279b3e2362ccbceb6dd3fc4c70f637615aab93","modified":1456328980000},{"_id":"themes/hueman/languages/ru.yml","shasum":"c11ff7e5df592269d337e30677edee669efc2978","modified":1456328980000},{"_id":"themes/hueman/layout/category.ejs","shasum":"5096d3f019098d9940429152295f6d6161d887ba","modified":1456328980000},{"_id":"themes/hueman/layout/archive.ejs","shasum":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1456328980000},{"_id":"themes/hueman/languages/zh-CN.yml","shasum":"b74c207a008cf0ba2e95cf695730fbde2e66f587","modified":1456328980000},{"_id":"themes/hueman/layout/comment/disqus.ejs","shasum":"83158f5b00f95acf847524fd7ffeb5aab25add78","modified":1456328980000},{"_id":"themes/hueman/layout/comment/counter.ejs","shasum":"13d2b93435398dc29a968f93326fbd18d4b28d8c","modified":1456328980000},{"_id":"themes/hueman/layout/comment/duoshuo.ejs","shasum":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1456328980000},{"_id":"themes/hueman/layout/comment/index.ejs","shasum":"d45635e78a3fc40e424a401e983f2c8eef6ebcfd","modified":1456328980000},{"_id":"themes/hueman/layout/comment/youyan.ejs","shasum":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1456328980000},{"_id":"themes/hueman/layout/comment/scripts.ejs","shasum":"8a9a20f72ba0923afa776396fb67d8c5d446a666","modified":1456328980000},{"_id":"themes/hueman/layout/common/article.ejs","shasum":"c30804f0b167053f731ad2a3429ddac603b1ac48","modified":1456328980000},{"_id":"themes/hueman/layout/common/content-title.ejs","shasum":"43288ebc0ea30d80e6d7df56f2e7ed5d7935ed1a","modified":1456328980000},{"_id":"themes/hueman/layout/common/footer.ejs","shasum":"4d01bd3d28820936b0d09529b60e9d6930afc9fe","modified":1456328980000},{"_id":"themes/hueman/layout/common/archive.ejs","shasum":"bf909e4d6798374daf114cf41540f2bd300408d9","modified":1456328980000},{"_id":"themes/hueman/layout/common/header.ejs","shasum":"4dbb53393c3ebef01088592babf135d2f6559f47","modified":1456328980000},{"_id":"themes/hueman/layout/common/head.ejs","shasum":"a1e0d4ffec19ef066928bbcdea2fbb615a18680a","modified":1456328980000},{"_id":"themes/hueman/layout/common/post/category.ejs","shasum":"f47522c059d3b4d721ce501203c05f94a285c0b5","modified":1456328980000},{"_id":"themes/hueman/layout/common/post/date.ejs","shasum":"2d090d33cbd23129d63a0ba768a03d717399d9c5","modified":1456328980000},{"_id":"themes/hueman/layout/common/post/title.ejs","shasum":"6d19c61afb1f5f71c483be2ce37c6820ac2cd8b5","modified":1456328980000},{"_id":"themes/hueman/layout/common/post/tag.ejs","shasum":"a364204d7152adf6c7522b6568990437e8308d1f","modified":1456328980000},{"_id":"themes/hueman/layout/common/scripts.ejs","shasum":"db677ab336d31292bffc071b2115e25e9c6f198d","modified":1456328980000},{"_id":"themes/hueman/layout/common/post/nav.ejs","shasum":"c5f41ebf451cff39eaf116096604ce706a175767","modified":1456328980000},{"_id":"themes/hueman/layout/common/sidebar.ejs","shasum":"745666ee78b714aa34d8774a005a0598261ec349","modified":1456328980000},{"_id":"themes/hueman/layout/common/summary.ejs","shasum":"3ee280d4847f2cde7d450e298f917b10b9c5d507","modified":1456328980000},{"_id":"themes/hueman/layout/index.ejs","shasum":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1456328980000},{"_id":"themes/hueman/layout/common/thumbnail.ejs","shasum":"a49ffb76c1897e5a60cee70e65c765d212dce500","modified":1456328980000},{"_id":"themes/hueman/layout/layout.ejs","shasum":"35fd7fe6d4e2d313246a0a31446a597714facdea","modified":1456328980000},{"_id":"themes/hueman/layout/page.ejs","shasum":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1456328980000},{"_id":"themes/hueman/layout/plugin/baidu-analytics.ejs","shasum":"d99089976258050666208f29000f84496fe1029c","modified":1456328980000},{"_id":"themes/hueman/layout/plugin/scripts.ejs","shasum":"45f11b8bc3c1ddbe907cf5b8b36488e6c0ee15b3","modified":1456328980000},{"_id":"themes/hueman/layout/plugin/google-analytics.ejs","shasum":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1456328980000},{"_id":"themes/hueman/layout/post.ejs","shasum":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1456328980000},{"_id":"themes/hueman/layout/search/baidu.ejs","shasum":"bcffa60f2d1750ac7499e928f538176e3804393b","modified":1456328980000},{"_id":"themes/hueman/layout/search/index.ejs","shasum":"8057338370fbda31dc9f21ec99fb91fcbab9d5c7","modified":1456328980000},{"_id":"themes/hueman/layout/search/swiftype.ejs","shasum":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1456328980000},{"_id":"themes/hueman/layout/share/addtoany.ejs","shasum":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1456328980000},{"_id":"themes/hueman/layout/share/bdshare.ejs","shasum":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1456328980000},{"_id":"themes/hueman/layout/share/default.ejs","shasum":"7492f5b375a56c67a1a1a4f6b893e37f49dc86dc","modified":1456328980000},{"_id":"themes/hueman/layout/share/index.ejs","shasum":"029e91aace5a4c0d8387fc7744c477ccc6865c30","modified":1456328980000},{"_id":"themes/hueman/layout/share/jiathis.ejs","shasum":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1456328980000},{"_id":"themes/hueman/layout/tag.ejs","shasum":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1456328980000},{"_id":"themes/hueman/layout/widget/archive.ejs","shasum":"c4d303eaaa23768e52ead324c422a8900b1fe448","modified":1456328980000},{"_id":"themes/hueman/layout/widget/tag.ejs","shasum":"bfbc63e675439dcdc35e07dce6948e41500b649c","modified":1456328980000},{"_id":"themes/hueman/layout/widget/category.ejs","shasum":"2d705df76f2eef7d695a971266fc104e89ca6bcd","modified":1456328980000},{"_id":"themes/hueman/layout/widget/links.ejs","shasum":"97dab84d6336a4c926ddc288d5a6c264f54c50c3","modified":1456328980000},{"_id":"themes/hueman/layout/widget/recent_posts.ejs","shasum":"16a2bd28bdf520616202670a18c6cc93d1dd3f54","modified":1456328980000},{"_id":"themes/hueman/scripts/fancybox.js","shasum":"c1b01a9c2d96474cdd7e09657e522e4a03579413","modified":1456328980000},{"_id":"themes/hueman/scripts/meta.js","shasum":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1456328980000},{"_id":"themes/hueman/scripts/excerpt.js","shasum":"630f17f2647b2ba5b207dba36fb3c6587a3aa04f","modified":1456328980000},{"_id":"themes/hueman/scripts/thumbnail.js","shasum":"8bd30b7e9294c11f0364dd1e840684aa961b736f","modified":1456328980000},{"_id":"themes/hueman/layout/widget/tagcloud.ejs","shasum":"3ecb048d6098bc3953043a4c25f1f7c4b23397cf","modified":1456328980000},{"_id":"themes/hueman/source/css/_extend.styl","shasum":"2860d503b68ae81ea7675c82c6e63873e0c9e761","modified":1456328980000},{"_id":"themes/hueman/package.json","shasum":"13dcc13c13e0347515f7f92292ac0e1a824413cd","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/agate.styl","shasum":"601eb70448a16b918df132f6fc41e891ae053653","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/ascetic.styl","shasum":"32cff3bef6fac3760fe78f203096477052a90552","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/androidstudio.styl","shasum":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/arduino-light.styl","shasum":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/arta.styl","shasum":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-light.styl","shasum":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-dark.styl","shasum":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-dark.styl","shasum":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-light.styl","shasum":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-light.styl","shasum":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-dark.styl","shasum":"d84382bc8298f96730757391d3e761b7e640f406","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-light.styl","shasum":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-dark.styl","shasum":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-dark.styl","shasum":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-dark.styl","shasum":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-light.styl","shasum":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-light.styl","shasum":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-dark.styl","shasum":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-light.styl","shasum":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-light.styl","shasum":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-dark.styl","shasum":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-light.styl","shasum":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/brown-paper.styl","shasum":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-dark.styl","shasum":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-dark.styl","shasum":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/color-brewer.styl","shasum":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/codepen-embed.styl","shasum":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-light.styl","shasum":"efa52713efc468abeeb2b9299704371583b857de","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/dark.styl","shasum":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/docco.styl","shasum":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/brown-papersq.png","shasum":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/far.styl","shasum":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/foundation.styl","shasum":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/darkula.styl","shasum":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/github-gist.styl","shasum":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/github.styl","shasum":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/grayscale.styl","shasum":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/highlightjs.styl","shasum":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/googlecode.styl","shasum":"bda816beee7b439814b514e6869dc678822be1bc","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/hopscotch.styl","shasum":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/idea.styl","shasum":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/index.styl","shasum":"a7c35f55255d2455eb7274dbc7ad9dd263899297","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/ir-black.styl","shasum":"693078bbd72a2091ed30f506cc55949600b717af","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/kimbie.dark.styl","shasum":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/hybrid.styl","shasum":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/kimbie.light.styl","shasum":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/magula.styl","shasum":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/monokai-sublime.styl","shasum":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/monokai.styl","shasum":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/mono-blue.styl","shasum":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/obsidian.styl","shasum":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/paraiso-dark.styl","shasum":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/paraiso-light.styl","shasum":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/pojoaque.jpg","shasum":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/railscasts.styl","shasum":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/rainbow.styl","shasum":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/school-book.png","shasum":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/pojoaque.styl","shasum":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/school-book.styl","shasum":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/sunburst.styl","shasum":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/solarized-light.styl","shasum":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/solarized-dark.styl","shasum":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-bright.styl","shasum":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-eighties.styl","shasum":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night.styl","shasum":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-blue.styl","shasum":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/vs.styl","shasum":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/tomorrow.styl","shasum":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/zenburn.styl","shasum":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1456328980000},{"_id":"themes/hueman/source/css/_highlight/xcode.styl","shasum":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/archive.styl","shasum":"5e5fb791ab54f0acf33850f586f7aa8cb2782f3a","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/assets.styl","shasum":"3d95417663c5a737f064a31ab4ef52bac7fda8df","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/footer.styl","shasum":"8dffae4ac6a57e506e378a9ce44b85a15a912cad","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/comment.styl","shasum":"d2de8f2c1cf6236ead0800c2a1566e01e7ae0b44","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/article.styl","shasum":"5b05389db22550ffe09005e122d779fa350c387e","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/header.styl","shasum":"f94fcb4e2cbda45c8dc910ddb8ff4f19ff0644bf","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/nav.styl","shasum":"11e32468f993133e5d2bfe4f4efc68240746f8c6","modified":1456328980000},{"_id":"themes/hueman/source/css/_partial/sidebar.styl","shasum":"1e6255f1bfa1a820f70d5cfdadf2caa726bf853d","modified":1456328980000},{"_id":"themes/hueman/source/css/_responsive.styl","shasum":"4addaf2f203563accf0479850eda1ab4f4a4c34b","modified":1456328980000},{"_id":"themes/hueman/source/css/_retina.styl","shasum":"6849940ab43a9bdd83db1fde8e1e7ba6897f9016","modified":1456328980000},{"_id":"themes/hueman/source/css/images/opacity-10.png","shasum":"bbc979866c5b50e8adb348419154b28b1ff44d78","modified":1456328980000},{"_id":"themes/hueman/source/css/_variables.styl","shasum":"8799b5e8a3d706a344c6819a274cb9022628c6c4","modified":1456328980000},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","shasum":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1456328980000},{"_id":"themes/hueman/source/css/images/logo-header.png","shasum":"5602e5aba2c6c39bebb46690741944a9ba7f1fd1","modified":1456380410000},{"_id":"themes/hueman/source/css/images/s-left.png","shasum":"c8cac4f4e3492606fab93196364bd0f87d93bb98","modified":1456328980000},{"_id":"themes/hueman/source/css/images/thumb-default.png","shasum":"2d0ba175d958d342494241c616a74d37f48059fb","modified":1456328980000},{"_id":"themes/hueman/source/css/style.styl","shasum":"fdb2bdeb5c8364a72743c52c481c8c1dfa89e73b","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1456328980000},{"_id":"themes/hueman/source/js/main.js","shasum":"5027fe5ba72a88d5f16a7feba312574ad50556b5","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1456328980000},{"_id":"themes/hueman/source/vendor/font-awesome/css/font-awesome.min.css","shasum":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/jquery.fancybox.pack.js","shasum":"4bdce95d7ed1e6e3f0cdbb21972f6ed730db6ec9","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1456328980000},{"_id":"themes/hueman/source/vendor/fancybox/jquery.fancybox.js","shasum":"c36aa96c08e0f0bc10a91e71f5f5aa1dbe4435c6","modified":1456328980000},{"_id":"themes/hueman/source/vendor/scrollLoading/images/preloader.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1456328980000},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.woff2","shasum":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1456328980000},{"_id":"themes/hueman/source/vendor/scrollLoading/images/preloader@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1456328980000},{"_id":"themes/hueman/source/vendor/scrollLoading/jquery.scrollLoading.js","shasum":"1a3eab1ab2c4644fe1ada921bd1bdb083268a751","modified":1456328980000},{"_id":"themes/hueman/source/vendor/scrollLoading/main.js","shasum":"d1e92247f199fa93c7b3672e6b2ad9ad74a0a529","modified":1456328980000},{"_id":"themes/hueman/source/vendor/scrollLoading/style.css","shasum":"4ee06b1478b786aed0817b629cf58f336e5eff62","modified":1456328980000},{"_id":"themes/hueman/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","shasum":"942addaec4d3a60af33947a84a3d85f926015947","modified":1456328980000},{"_id":"themes/hueman/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","shasum":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1456328980000},{"_id":"themes/hueman/source/vendor/source-code-pro/styles.css","shasum":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1456328980000},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","shasum":"78029561e4c2ec565ea11c3f5bbd052b018af8a6","modified":1456328980000},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","shasum":"1454a4753468b607c23deac9f5438cd0ed5cb35d","modified":1456328980000},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","shasum":"4e5557954ec161edc03b6f971ddefee6179c1305","modified":1456328980000},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","shasum":"6d17eac7fcc2866f10d1f2725a08ab749a6e978d","modified":1456328980000},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","shasum":"1758c64c8acec4497735ccb5336b1a518d24024c","modified":1456328980000},{"_id":"themes/hueman/source/vendor/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","shasum":"e2e2993940fc54ed41f26e39257fdbd824c05e81","modified":1456328980000},{"_id":"themes/hueman/source/vendor/titillium-web/styles.css","shasum":"d98f0c50aae4c922cd0b663fa820fd7dff2dd9b1","modified":1456328980000},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.eot","shasum":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1456328980000},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.woff","shasum":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1456328980000},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/FontAwesome.otf","shasum":"0112e96f327d413938d37c1693806f468ffdbace","modified":1456328980000},{"_id":"themes/hueman/source/vendor/jquery/2.0.3/jquery.min.js","shasum":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1456328980000},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.ttf","shasum":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1456328980000},{"_id":"themes/hueman/source/vendor/font-awesome/fonts/fontawesome-webfont.svg","shasum":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1456328980000}],"Category":[],"Data":[],"Page":[{"title":"About","date":"2016-02-25T04:45:18.000Z","_content":"\n用热血给自己树起一个高远的目标------不仅是为了争取一种光荣，更是为了追求一种境界。目标实现了，便是光荣；目标实现不了，人生也会因这一路风雨跋涉变得丰富而充实；在我看来，这就是不虚此生。","source":"about/index.md","raw":"---\ntitle: About\ndate: 2016-02-25 12:45:18\n---\n\n用热血给自己树起一个高远的目标------不仅是为了争取一种光荣，更是为了追求一种境界。目标实现了，便是光荣；目标实现不了，人生也会因这一路风雨跋涉变得丰富而充实；在我看来，这就是不虚此生。","updated":"2016-02-25T07:07:27.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cil3fw9iw0001jhzd1rp854gl"}],"Post":[{"title":"Hexo + Github搭建自己的博客","date":"2016-02-24T16:14:52.000Z","_content":"\n之前试过wordpress，博客园等，都觉得不是很爽\n1. wordpress.com国内被墙，wordpress.org又需要自己部署\n2. 博客园个人感觉又比较丑。。。。\n3. 其次基于程序猿喜欢折腾的本性，hexo + github感觉更高大上一些，\n   其次可以方便的在github上放一些自己的代码，作为以后做项目的一些参考。\n\n### 前期准备\n1. 安装git client\n    {% codeblock %}brew install git{% endcodeblock %}\n2. 创建Gihub账号(username), 并且创建username.github.io的仓库\n3. 安装NodeJS, npm\n    {% codeblock %}brew install nodejs{% endcodeblock %}\n4. 安装hexo\n    {% codeblock %}npm install -g hexo{% endcodeblock %}\n5. 安装hexo-deployer-git，用于deploy自己的博客到github上\n    {% codeblock %}npm install hexo-deployer-git --save{% endcodeblock %}\n\n### 下面就可以利用hexo创建自己的博客了\n1. 首先使用下面的命令初始化一个example的站点\n    {% codeblock %}hexo init username.github.io{% endcodeblock %}\n2. 修改_config.yml文件的deployment配置，改成：\n    {% codeblock %} \n  \t  deploy:\n        type: git\n        repository: git@github.com:username/username.github.io.git\n        branch: master\n    {% endcodeblock %} \n3. 然后就可以在本地预览博客了: \n    {% codeblock %}\n    npm install\n    hexo server\n    {% endcodeblock %}\n4. 可以http://localhost:4000/ 中打开了\n\n### 装扮自己的博客\n网上有很多炫酷的主题：https://hexo.io/themes/， 这里我们选择一个hueman作为例子\n    详细的参考https://github.com/ppoffice/hexo-theme-hueman/wiki\n1. 在博客工作根目录下执行如下命令:\n\t{% codeblock %} git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman{% endcodeblock %}\n2. 编辑_config.yml配置文件，修改theme\n    theme: hueman\n3. 配置theme/hueman中的配置文件，简单的可以重名_config.yml.example为_config.yml\n    {% codeblock %}mv ./themes/hueman/_config.yml.example ./themes/hueman/_config.yml{% endcodeblock %}\n4. 然后再次用hexo server命令预览自己的博客，主题变了，cool\n\n### 发布博客到github\n经过上面的准备工作，发布博客只需在工作根目录执行下面的命令\n   {% codeblock %}\n       hexo clean generate\n       hexo deploy\n   {% endcodeblock %}\n然后就可以打开: http://username.github.io 来看自己的博客了。\n","source":"_posts/Hexo + Github搭建自己的博客.md","raw":"---\ntitle: Hexo + Github搭建自己的博客\ndate: 2016-02-25 00:14:52\ntags:\n---\n\n之前试过wordpress，博客园等，都觉得不是很爽\n1. wordpress.com国内被墙，wordpress.org又需要自己部署\n2. 博客园个人感觉又比较丑。。。。\n3. 其次基于程序猿喜欢折腾的本性，hexo + github感觉更高大上一些，\n   其次可以方便的在github上放一些自己的代码，作为以后做项目的一些参考。\n\n### 前期准备\n1. 安装git client\n    {% codeblock %}brew install git{% endcodeblock %}\n2. 创建Gihub账号(username), 并且创建username.github.io的仓库\n3. 安装NodeJS, npm\n    {% codeblock %}brew install nodejs{% endcodeblock %}\n4. 安装hexo\n    {% codeblock %}npm install -g hexo{% endcodeblock %}\n5. 安装hexo-deployer-git，用于deploy自己的博客到github上\n    {% codeblock %}npm install hexo-deployer-git --save{% endcodeblock %}\n\n### 下面就可以利用hexo创建自己的博客了\n1. 首先使用下面的命令初始化一个example的站点\n    {% codeblock %}hexo init username.github.io{% endcodeblock %}\n2. 修改_config.yml文件的deployment配置，改成：\n    {% codeblock %} \n  \t  deploy:\n        type: git\n        repository: git@github.com:username/username.github.io.git\n        branch: master\n    {% endcodeblock %} \n3. 然后就可以在本地预览博客了: \n    {% codeblock %}\n    npm install\n    hexo server\n    {% endcodeblock %}\n4. 可以http://localhost:4000/ 中打开了\n\n### 装扮自己的博客\n网上有很多炫酷的主题：https://hexo.io/themes/， 这里我们选择一个hueman作为例子\n    详细的参考https://github.com/ppoffice/hexo-theme-hueman/wiki\n1. 在博客工作根目录下执行如下命令:\n\t{% codeblock %} git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman{% endcodeblock %}\n2. 编辑_config.yml配置文件，修改theme\n    theme: hueman\n3. 配置theme/hueman中的配置文件，简单的可以重名_config.yml.example为_config.yml\n    {% codeblock %}mv ./themes/hueman/_config.yml.example ./themes/hueman/_config.yml{% endcodeblock %}\n4. 然后再次用hexo server命令预览自己的博客，主题变了，cool\n\n### 发布博客到github\n经过上面的准备工作，发布博客只需在工作根目录执行下面的命令\n   {% codeblock %}\n       hexo clean generate\n       hexo deploy\n   {% endcodeblock %}\n然后就可以打开: http://username.github.io 来看自己的博客了。\n","slug":"Hexo + Github搭建自己的博客","published":1,"updated":"2016-02-26T05:43:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3fw9hx0000jhzdiayo6jm5"},{"title":"使用ID3生成决策树","date":"2016-02-26T03:08:53.000Z","_content":"ID3算法是一种贪心算法，用来构造决策树。ID3算法起源于概念学习系统（CLS），以信息熵的下降速度为选取测试属性的标准，即在每个节点选取还尚未被用来划分的具有最高信息增益的属性作为划分标准，然后继续这个过程，直到生成的决策树能完美分类训练样例。\n\n优点：计算复杂度不高，输出结果易于理解，对中间值的缺失不敏感，可以处理不相关特征数据。\n缺点：可能会产生过度匹配问题。\n适用数据类型：数值型和标称型\n\n例如我们有如下数据:\n\n|编号|Sky|AirTemp|Humidity|Wind|Water|Forecast|EnjoySport|\n|:-|:-----:|:----:|:----:|:----:|:----:|:----:|-:|\n|1|Sunny|Warm|Normal|Strong|Warm|Same|Y|\n|2|Sunny|Warm|High|Strong|Warm|Same|Y|\n|3|Rainy|Cold|High|Strong|Warm|Same|N|\n|4|Rainy|Warm|High|Strong|warm|Change|Y|\n\n1. 如果根据Sky作为标准来分割集合，则得到的结果为：{(Sunny, Y), (Rainy, N),{Rainy, Y}}， 对这个集合计算香农熵:\n                H1= -1/3*log(1/3) - 2/3*log(2/3)= 0.6365141682948128\n2. 如果根据AirTemp来分割，则得到的集合为:{(Warm, Y), (Cold, N) },对这个集合计算香农熵：\n\t            H2= -1/2*log(1/2) - 1/2*log(1/2)= 0.6931471805599453\n3. 如果根据Forecast来分割，则得到的集合为：{(Same, Y ), (Same, N), (Change, Y) }，对这个集合计算香农熵：\n\t            H3=-1/3*log(1/3) - 2/3*log(2/3) = 0.6365141682948128\n\n以此类推，最终我们选择AirTemp来作为决策树的第一个节点，将集合分割成两个。然后递归得到的分支集合，做相同的处理。\n递归结束的条件是：程序遍历完所有划分数据集的属性，或者每个分支下的所有实例都具有相同的分类。\n\nID3算法简单且容易理解，但是会有过度匹配的问题，此时就需要一些剪枝的方法。除了ID3算法外，还有一些其他比较流行的决策树生成方法，例如C4.5和CART算法。\n\nhttp://fangdonghao1029.blog.163.com/blog/static/34364307201281352032174/\n\nhttp://blog.sina.com.cn/s/blog_8095e51d01013chj.html","source":"_posts/使用ID3生成决策树.md","raw":"---\ntitle: 使用ID3生成决策树\ndate: 2016-02-26 11:08:53\ntags: 机器学习\n---\nID3算法是一种贪心算法，用来构造决策树。ID3算法起源于概念学习系统（CLS），以信息熵的下降速度为选取测试属性的标准，即在每个节点选取还尚未被用来划分的具有最高信息增益的属性作为划分标准，然后继续这个过程，直到生成的决策树能完美分类训练样例。\n\n优点：计算复杂度不高，输出结果易于理解，对中间值的缺失不敏感，可以处理不相关特征数据。\n缺点：可能会产生过度匹配问题。\n适用数据类型：数值型和标称型\n\n例如我们有如下数据:\n\n|编号|Sky|AirTemp|Humidity|Wind|Water|Forecast|EnjoySport|\n|:-|:-----:|:----:|:----:|:----:|:----:|:----:|-:|\n|1|Sunny|Warm|Normal|Strong|Warm|Same|Y|\n|2|Sunny|Warm|High|Strong|Warm|Same|Y|\n|3|Rainy|Cold|High|Strong|Warm|Same|N|\n|4|Rainy|Warm|High|Strong|warm|Change|Y|\n\n1. 如果根据Sky作为标准来分割集合，则得到的结果为：{(Sunny, Y), (Rainy, N),{Rainy, Y}}， 对这个集合计算香农熵:\n                H1= -1/3*log(1/3) - 2/3*log(2/3)= 0.6365141682948128\n2. 如果根据AirTemp来分割，则得到的集合为:{(Warm, Y), (Cold, N) },对这个集合计算香农熵：\n\t            H2= -1/2*log(1/2) - 1/2*log(1/2)= 0.6931471805599453\n3. 如果根据Forecast来分割，则得到的集合为：{(Same, Y ), (Same, N), (Change, Y) }，对这个集合计算香农熵：\n\t            H3=-1/3*log(1/3) - 2/3*log(2/3) = 0.6365141682948128\n\n以此类推，最终我们选择AirTemp来作为决策树的第一个节点，将集合分割成两个。然后递归得到的分支集合，做相同的处理。\n递归结束的条件是：程序遍历完所有划分数据集的属性，或者每个分支下的所有实例都具有相同的分类。\n\nID3算法简单且容易理解，但是会有过度匹配的问题，此时就需要一些剪枝的方法。除了ID3算法外，还有一些其他比较流行的决策树生成方法，例如C4.5和CART算法。\n\nhttp://fangdonghao1029.blog.163.com/blog/static/34364307201281352032174/\n\nhttp://blog.sina.com.cn/s/blog_8095e51d01013chj.html","slug":"使用ID3生成决策树","published":1,"updated":"2016-02-26T03:28:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3fw9j90002jhzdlqhwtjmn"},{"title":"P-Unit结合JUnit做并发性能测试","date":"2016-02-25T05:31:18.000Z","_content":"\nJUnit大家一定都很熟悉了，这里就不做多的介绍。我们重点说一下p-unit的应用。\np-unit是一款开源的测试框架，支持在多线程中跑同样的测试用例.\n比如你有如下JUnit的测试代码:\n{% codeblock lang:java%}\npublic class sampleTest {\n    @Test\n    public void test1() {\n      //some logic and assert\n    }\n    @Test\n    public void test2() {\n      // do something\n    }\n}\n{% endcodeblock %}\n\n1. 并发的跑一个unittest中的所有test cases。\n{% codeblock lang:java%}\nSoloRunner runner = new SoloRunner();\n//如果你是用JUnit 的@Test annotation, 这个是必须的。\nrunner.setConvention(new JUnitAnnotationConvention());\nrunner.run(sampleTest.class);\n{% endcodeblock %}\n\n此时test1和test2会并发执行\n2. 对一个unittest中的每个方法用多个线程去执行。\n\n{% codeblock lang:java%}\nConcurrentRunner crunner = new ConcurrentRunner(100);\ncrunner.setConvention(new JUnitAnnotationConvention());\ncrunner.run(sampleTest.class);\n{% endcodeblock %}\n\n此时分别会有100个线程并发的执行test1和test2\n\nSource code: https://svn.code.sf.net/p/p-unit/code/trunk/\n里面有源码和简单的测试代码和说明，可供参考\nhttp://www.ibm.com/developerworks/cn/java/j-lo-punit/","source":"_posts/P-Unit结合JUnit做并发性能测试.md","raw":"---\ntitle: P-Unit结合JUnit做并发性能测试\ndate: 2016-02-25 13:31:18\ntags: Java\n---\n\nJUnit大家一定都很熟悉了，这里就不做多的介绍。我们重点说一下p-unit的应用。\np-unit是一款开源的测试框架，支持在多线程中跑同样的测试用例.\n比如你有如下JUnit的测试代码:\n{% codeblock lang:java%}\npublic class sampleTest {\n    @Test\n    public void test1() {\n      //some logic and assert\n    }\n    @Test\n    public void test2() {\n      // do something\n    }\n}\n{% endcodeblock %}\n\n1. 并发的跑一个unittest中的所有test cases。\n{% codeblock lang:java%}\nSoloRunner runner = new SoloRunner();\n//如果你是用JUnit 的@Test annotation, 这个是必须的。\nrunner.setConvention(new JUnitAnnotationConvention());\nrunner.run(sampleTest.class);\n{% endcodeblock %}\n\n此时test1和test2会并发执行\n2. 对一个unittest中的每个方法用多个线程去执行。\n\n{% codeblock lang:java%}\nConcurrentRunner crunner = new ConcurrentRunner(100);\ncrunner.setConvention(new JUnitAnnotationConvention());\ncrunner.run(sampleTest.class);\n{% endcodeblock %}\n\n此时分别会有100个线程并发的执行test1和test2\n\nSource code: https://svn.code.sf.net/p/p-unit/code/trunk/\n里面有源码和简单的测试代码和说明，可供参考\nhttp://www.ibm.com/developerworks/cn/java/j-lo-punit/","slug":"P-Unit结合JUnit做并发性能测试","published":1,"updated":"2016-02-25T05:39:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3fw9jp0005jhzdb7jgvspa"},{"title":"MySQL连接问题123","date":"2016-02-26T02:52:07.000Z","_content":"\n1. 首先要排查网络问题和防火墙的问题\n这个是必须的， 你要是MySQL的服务器都连不上，那还访问什么？ 怎么检查呢？\nping 192.168.0.11，如果ping 的通的话， 再去检查一下 3306端口是不是被防火墙给挡掉了，telnet 192.168.0.11 3306 或者干脆把防火墙关掉，\nservice iptables stop (Redhat) 或 ufw disable(ubuntu) 这一步没问题的话， 开始下一步。\n\n2. 要排查有没有访问权限\n说到访问权限， MySQL分配用户的时候会指定一个host, 比如我的 host指定为 192.168.0.5 , 那么这个账号就只能用 .5 这一台机器问，其他的机器用这个账号访问会提示没有权限。 host 指定为 % 则表示允许所有的机器访问。 一般来说出于安全方面的考虑，遵循最小权限原则， 权限的问题就不多讲了， 不会的自己查手册。可以使用如下命令：\n{% codeblock %}\nmysql>use mysql;\nmysql>update user set host = '%' where user ='root';\nmysql>select host, user from user;\n{% endcodeblock %}\n如果执行上述命令出现：ERROR 1062 (23000):Duplicate entry'%-root' for key 'PRIMARY' 错误，\n说明host已经有了%这个值，所以直接运行命令：\n{% codeblock %}\nmysql>flushprivileges;\n{% endcodeblock %}\n\n确定了权限没问题的话进行下一步。\n或者直接使用如下命令: grant all privileges on *.* to sa @\"%\" identified by \"12345\";为-usa -p12345用户开通所有机器的访问权限。\n\n3. 要排查MySQL的配置\n检查mysql的配置文件， Linux下MySQL的配置文件叫 my.cnf，windows下的叫 my.ini，检查这个配置项–bind-address=IP\n引用手册里的一段话：\n\t*The IP address to bind to.Only one address can be selected. If this option is specified multiple times,the last address given is used. If no address or 0.0.0.0 is specified, the server listens on all interfaces.*\n绑定的IP， 只能绑定一个IP， 如果绑定多个IP, 则以最后一个绑定的为准。如果没有绑定或绑定 0.0.0.0, 服务器监听所有的客户端。\n\n4. Mysql忘记密码怎么办\n利用vim命令打开mysql配置文件my.cnf\n在mysqld进程配置文件中添加skip-grant-tables,添加完成后,执行wd保存\n重启mysql server然后就可以不用密码直接登录mysql了，登录进去后\n执行以下命令修改root密码：\n{% codeblock %}\nmysql>update mysql.user set password=password('newpassword') where user='root';\n{% endcodeblock %}\n#将password()中的newpassword字符更改为你自己的密码。\n密码修改完成后，将my.cnf文件中添加的skip-grant-tables语句注释或删除掉，然后重启数据库即可。","source":"_posts/MySQL连接问题123.md","raw":"---\ntitle: MySQL连接问题123\ndate: 2016-02-26 10:52:07\ntags: 数据库\n---\n\n1. 首先要排查网络问题和防火墙的问题\n这个是必须的， 你要是MySQL的服务器都连不上，那还访问什么？ 怎么检查呢？\nping 192.168.0.11，如果ping 的通的话， 再去检查一下 3306端口是不是被防火墙给挡掉了，telnet 192.168.0.11 3306 或者干脆把防火墙关掉，\nservice iptables stop (Redhat) 或 ufw disable(ubuntu) 这一步没问题的话， 开始下一步。\n\n2. 要排查有没有访问权限\n说到访问权限， MySQL分配用户的时候会指定一个host, 比如我的 host指定为 192.168.0.5 , 那么这个账号就只能用 .5 这一台机器问，其他的机器用这个账号访问会提示没有权限。 host 指定为 % 则表示允许所有的机器访问。 一般来说出于安全方面的考虑，遵循最小权限原则， 权限的问题就不多讲了， 不会的自己查手册。可以使用如下命令：\n{% codeblock %}\nmysql>use mysql;\nmysql>update user set host = '%' where user ='root';\nmysql>select host, user from user;\n{% endcodeblock %}\n如果执行上述命令出现：ERROR 1062 (23000):Duplicate entry'%-root' for key 'PRIMARY' 错误，\n说明host已经有了%这个值，所以直接运行命令：\n{% codeblock %}\nmysql>flushprivileges;\n{% endcodeblock %}\n\n确定了权限没问题的话进行下一步。\n或者直接使用如下命令: grant all privileges on *.* to sa @\"%\" identified by \"12345\";为-usa -p12345用户开通所有机器的访问权限。\n\n3. 要排查MySQL的配置\n检查mysql的配置文件， Linux下MySQL的配置文件叫 my.cnf，windows下的叫 my.ini，检查这个配置项–bind-address=IP\n引用手册里的一段话：\n\t*The IP address to bind to.Only one address can be selected. If this option is specified multiple times,the last address given is used. If no address or 0.0.0.0 is specified, the server listens on all interfaces.*\n绑定的IP， 只能绑定一个IP， 如果绑定多个IP, 则以最后一个绑定的为准。如果没有绑定或绑定 0.0.0.0, 服务器监听所有的客户端。\n\n4. Mysql忘记密码怎么办\n利用vim命令打开mysql配置文件my.cnf\n在mysqld进程配置文件中添加skip-grant-tables,添加完成后,执行wd保存\n重启mysql server然后就可以不用密码直接登录mysql了，登录进去后\n执行以下命令修改root密码：\n{% codeblock %}\nmysql>update mysql.user set password=password('newpassword') where user='root';\n{% endcodeblock %}\n#将password()中的newpassword字符更改为你自己的密码。\n密码修改完成后，将my.cnf文件中添加的skip-grant-tables语句注释或删除掉，然后重启数据库即可。","slug":"MySQL连接问题123","published":1,"updated":"2016-02-26T03:01:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3fw9jr0008jhzdw2n6p5y8"},{"title":"LMAX Distruptor","date":"2016-02-25T07:24:06.000Z","_content":"\nLAMAX Distruptor是一个高性能，低延迟的producer-consumer框架。到底有多吊呢，可以参考Github上给出的性能测试结果：\nhttps://github.com/LMAX-Exchange/disruptor/wiki/Performance-Results\n\n其核心就是RingBuffer这个东东, 感兴趣的同学可以参考下面的链接了解更多:\nhttp://mechanitis.blogspot.jp/2011/06/dissecting-disruptor-whats-so-special.html\n\n可以实现多种组合模式，我们这里列举几个比较常用的，在开始之前我们先定义需要在生产者和消费者之间传递的对象，以及产生实例的工厂方法。\n\n{% codeblock lang:java%}\npublic class LongEvent {\n    private long value;\n    public void setValue(long value)\n    {\n        this.value = value;\n    }\n    @Override\n    public String toString(){\n        return this.value + \"\";\n    }\n    public static EventFactory FACTORY = new EventFactory(){\n        @Override\n        public LongEvent newInstance() {\n            return new LongEvent();\n        }\n    };\n}\n{% endcodeblock %}\n\n因为所有的Event对象都是托管给Distruptor由EventFactory创建的，且需要重复利用，所以定义Event的时候必须要提供setter方法。\n其次我们需要定义一个处理Event的handler:\n\n{% codeblock lang:java%}\npublic class LongEventHandler implements EventHandler {\n    private final String name;\n    public LongEventHandler(String name){\n        this.name = name;\n    }\n    public void onEvent(LongEvent event,\n                  long sequence, boolean endOfBatch)\n    {\n        System.out.println(this.name + \": \" + event);\n    }\n}\n{% endcodeblock %}\n\n然后我们定义一个产生Event的Producer:\n\n{% codeblock lang:java %}\npublic class LongEventProducer {\n    private final RingBuffer ringBuffer;\n    public LongEventProducer(RingBuffer ringBuffer)\n    {\n        this.ringBuffer = ringBuffer;\n    }\n\n    public void onData(long val)\n    {\n        // Grab the next sequence\n        long sequence = ringBuffer.next();\n        try\n        {\n            // Get the entry in the Disruptor for the sequence\n            LongEvent event = ringBuffer.get(sequence);\n            // Fill with data\n            event.setValue(val);\n        }\n        finally\n        {\n            //发布Event\n            ringBuffer.publish(sequence);\n        }\n    }\n}\n{% endcodeblock %}\nSingle producer- single consumer:\n{% codeblock lang:java %}\npublic static void main(String[] args){\n    int bufferSize = 1024;\n    Executor executor = Executors.newCachedThreadPool();\n    Disruptor disruptor = new Disruptor(LongEvent.FACTORY,\n            bufferSize,\n            executor, ProducerType.MULTI,\n            new SleepingWaitStrategy());\n    LongEventHandler handler = new new LongEventHandler(\"p1-s1\");\n    disruptor.handleEventsWith(handler);\n\n    LongEventProducer producer = new\n            LongEventProducer(disruptor.getRingBuffer());\n    disruptor.start();\n    for (int i = 0; i &lt; 1000; i++)\n    {\n        producer.onData(i);\n    }\n}\n{% endcodeblock %}\nSingle producer-pipeline consumers:\n{% codeblock lang:java %}\npublic static void main(String[] args){\n    int bufferSize = 1024;\n    Executor executor = Executors.newCachedThreadPool();\n    Disruptor disruptor = new Disruptor(LongEvent.FACTORY,\n            bufferSize,\n            executor, ProducerType.MULTI,\n            new SleepingWaitStrategy());\n    LongEventHandler handler = new LongEventHandler(\"p1-s1\");\n    LongEventHandler handler1 = new LongEventHandler(\"p2-s2\");\n    disruptor.handleEventsWith(handler)\n                .handleEventsWith(handler1);\n\n    LongEventProducer producer = new\n            LongEventProducer(disruptor.getRingBuffer());\n    disruptor.start();\n    for (int i = 0; i &lt; 1000; i++)\n    {\n        producer.onData(i);\n    }\n}\n{% endcodeblock %}\n\n可以发现p2-s2的处理都在p1-s2之后完成\nSingle producer-work pool(多个consumer竞争消费),这种模式是多个handler并发的竞争同一个Event消息，需要实现WorkHandler接口\n{% codeblock lang:java %}\npublic class LongEventHandler2 implements WorkHandler {\n    private final String name;\n    public LongEventHandler2(String name){\n        this.name = name;\n    }\n\n    @Override\n    public void onEvent(LongEvent event) throws Exception {\n        System.out.println(this.name + \": \" + event);\n    }\n\n    public static void main(String[] args){\n        int bufferSize = 1024;\n        Executor executor = Executors.newCachedThreadPool();\n        Disruptor disruptor = new Disruptor(LongEvent.FACTORY,\n                bufferSize,\n                executor, ProducerType.MULTI,\n                new SleepingWaitStrategy());\n        LongEventHandler2 handler = new LongEventHandler2(\"p1-s1\");\n        LongEventHandler2 handler1 = new LongEventHandler2(\"p2-s2\");\n        disruptor.handleEventsWithWorkerPool(handler, handler1);\n\n        LongEventProducer producer = new\n                LongEventProducer(disruptor.getRingBuffer());\n        disruptor.start();\n        for (int i = 0; i &lt; 1000; i++)\n        {\n            producer.onData(i);\n        }\n    }\n}\n{% endcodeblock %}\n\n这三种基本模式还可以组合到一起实现更为复杂的处理逻辑，具体的使用方面同学们可以自己琢磨，最主要的是对RingBuffer的使用， 详细的可以参考Github上的测试代码\n\n关于等待策略WaitStrategy的选择需要特别注意，默认是选择BlockingWaitStrategy。\n\n1. BlockingWaitStrategy:这个策略的内部适用一个锁和条件变量来控制线程的执行和等待（Java基本的同步方法）。BlockingWaitStrategy是最慢的等待策略，但也是CPU使用率最低和最稳定的选项。然而，可以根据不同的部署环境调整选项以提高性能。\n2. SleepingWaitStrategy: 和BlockingWaitStrategy一样，SpleepingWaitStrategy的CPU使用率也比较低。它的方式是循环等待并且在循环中间调用LockSupport.parkNanos(1)来睡眠，（在Linux系统上面睡眠时间60µs）.然而，它的优点在于生产线程只需要计数，而不执行任何指令。并且没有条件变量的消耗。但是，事件对象从生产者到消费者传递的延迟变大了。SleepingWaitStrategy最好用在不需要低延迟，而且事件发布对于生产者的影响比较小的情况下。比如异步日志功能\n3. YieldingWaitStrategy:YieldingWaitStrategy是可以被用在低延迟系统中的两个策略之一，这种策略在减低系统延迟的同时也会增加CPU运算量。YieldingWaitStrategy策略会循环等待sequence增加到合适的值。循环中调用Thread.yield()允许其他准备好的线程执行。如果需要高性能而且事件消费者线程比逻辑内核少的时候，推荐使用YieldingWaitStrategy策略。例如：在开启超线程的时候\n4. BusySpinWaitStrategy:BusySpinWaitStrategy是性能最高的等待策略，同时也是对部署环境要求最高的策略。这个性能最好用在事件处理线程比物理内核数目还要小的时候。例如：在禁用超线程技术的时候。\n\n使用的时候需要根据自己的实际需求选择。\n","source":"_posts/LMAX-Distruptor.md","raw":"---\ntitle: LMAX Distruptor\ndate: 2016-02-25 15:24:06\ntags: Java\n---\n\nLAMAX Distruptor是一个高性能，低延迟的producer-consumer框架。到底有多吊呢，可以参考Github上给出的性能测试结果：\nhttps://github.com/LMAX-Exchange/disruptor/wiki/Performance-Results\n\n其核心就是RingBuffer这个东东, 感兴趣的同学可以参考下面的链接了解更多:\nhttp://mechanitis.blogspot.jp/2011/06/dissecting-disruptor-whats-so-special.html\n\n可以实现多种组合模式，我们这里列举几个比较常用的，在开始之前我们先定义需要在生产者和消费者之间传递的对象，以及产生实例的工厂方法。\n\n{% codeblock lang:java%}\npublic class LongEvent {\n    private long value;\n    public void setValue(long value)\n    {\n        this.value = value;\n    }\n    @Override\n    public String toString(){\n        return this.value + \"\";\n    }\n    public static EventFactory FACTORY = new EventFactory(){\n        @Override\n        public LongEvent newInstance() {\n            return new LongEvent();\n        }\n    };\n}\n{% endcodeblock %}\n\n因为所有的Event对象都是托管给Distruptor由EventFactory创建的，且需要重复利用，所以定义Event的时候必须要提供setter方法。\n其次我们需要定义一个处理Event的handler:\n\n{% codeblock lang:java%}\npublic class LongEventHandler implements EventHandler {\n    private final String name;\n    public LongEventHandler(String name){\n        this.name = name;\n    }\n    public void onEvent(LongEvent event,\n                  long sequence, boolean endOfBatch)\n    {\n        System.out.println(this.name + \": \" + event);\n    }\n}\n{% endcodeblock %}\n\n然后我们定义一个产生Event的Producer:\n\n{% codeblock lang:java %}\npublic class LongEventProducer {\n    private final RingBuffer ringBuffer;\n    public LongEventProducer(RingBuffer ringBuffer)\n    {\n        this.ringBuffer = ringBuffer;\n    }\n\n    public void onData(long val)\n    {\n        // Grab the next sequence\n        long sequence = ringBuffer.next();\n        try\n        {\n            // Get the entry in the Disruptor for the sequence\n            LongEvent event = ringBuffer.get(sequence);\n            // Fill with data\n            event.setValue(val);\n        }\n        finally\n        {\n            //发布Event\n            ringBuffer.publish(sequence);\n        }\n    }\n}\n{% endcodeblock %}\nSingle producer- single consumer:\n{% codeblock lang:java %}\npublic static void main(String[] args){\n    int bufferSize = 1024;\n    Executor executor = Executors.newCachedThreadPool();\n    Disruptor disruptor = new Disruptor(LongEvent.FACTORY,\n            bufferSize,\n            executor, ProducerType.MULTI,\n            new SleepingWaitStrategy());\n    LongEventHandler handler = new new LongEventHandler(\"p1-s1\");\n    disruptor.handleEventsWith(handler);\n\n    LongEventProducer producer = new\n            LongEventProducer(disruptor.getRingBuffer());\n    disruptor.start();\n    for (int i = 0; i &lt; 1000; i++)\n    {\n        producer.onData(i);\n    }\n}\n{% endcodeblock %}\nSingle producer-pipeline consumers:\n{% codeblock lang:java %}\npublic static void main(String[] args){\n    int bufferSize = 1024;\n    Executor executor = Executors.newCachedThreadPool();\n    Disruptor disruptor = new Disruptor(LongEvent.FACTORY,\n            bufferSize,\n            executor, ProducerType.MULTI,\n            new SleepingWaitStrategy());\n    LongEventHandler handler = new LongEventHandler(\"p1-s1\");\n    LongEventHandler handler1 = new LongEventHandler(\"p2-s2\");\n    disruptor.handleEventsWith(handler)\n                .handleEventsWith(handler1);\n\n    LongEventProducer producer = new\n            LongEventProducer(disruptor.getRingBuffer());\n    disruptor.start();\n    for (int i = 0; i &lt; 1000; i++)\n    {\n        producer.onData(i);\n    }\n}\n{% endcodeblock %}\n\n可以发现p2-s2的处理都在p1-s2之后完成\nSingle producer-work pool(多个consumer竞争消费),这种模式是多个handler并发的竞争同一个Event消息，需要实现WorkHandler接口\n{% codeblock lang:java %}\npublic class LongEventHandler2 implements WorkHandler {\n    private final String name;\n    public LongEventHandler2(String name){\n        this.name = name;\n    }\n\n    @Override\n    public void onEvent(LongEvent event) throws Exception {\n        System.out.println(this.name + \": \" + event);\n    }\n\n    public static void main(String[] args){\n        int bufferSize = 1024;\n        Executor executor = Executors.newCachedThreadPool();\n        Disruptor disruptor = new Disruptor(LongEvent.FACTORY,\n                bufferSize,\n                executor, ProducerType.MULTI,\n                new SleepingWaitStrategy());\n        LongEventHandler2 handler = new LongEventHandler2(\"p1-s1\");\n        LongEventHandler2 handler1 = new LongEventHandler2(\"p2-s2\");\n        disruptor.handleEventsWithWorkerPool(handler, handler1);\n\n        LongEventProducer producer = new\n                LongEventProducer(disruptor.getRingBuffer());\n        disruptor.start();\n        for (int i = 0; i &lt; 1000; i++)\n        {\n            producer.onData(i);\n        }\n    }\n}\n{% endcodeblock %}\n\n这三种基本模式还可以组合到一起实现更为复杂的处理逻辑，具体的使用方面同学们可以自己琢磨，最主要的是对RingBuffer的使用， 详细的可以参考Github上的测试代码\n\n关于等待策略WaitStrategy的选择需要特别注意，默认是选择BlockingWaitStrategy。\n\n1. BlockingWaitStrategy:这个策略的内部适用一个锁和条件变量来控制线程的执行和等待（Java基本的同步方法）。BlockingWaitStrategy是最慢的等待策略，但也是CPU使用率最低和最稳定的选项。然而，可以根据不同的部署环境调整选项以提高性能。\n2. SleepingWaitStrategy: 和BlockingWaitStrategy一样，SpleepingWaitStrategy的CPU使用率也比较低。它的方式是循环等待并且在循环中间调用LockSupport.parkNanos(1)来睡眠，（在Linux系统上面睡眠时间60µs）.然而，它的优点在于生产线程只需要计数，而不执行任何指令。并且没有条件变量的消耗。但是，事件对象从生产者到消费者传递的延迟变大了。SleepingWaitStrategy最好用在不需要低延迟，而且事件发布对于生产者的影响比较小的情况下。比如异步日志功能\n3. YieldingWaitStrategy:YieldingWaitStrategy是可以被用在低延迟系统中的两个策略之一，这种策略在减低系统延迟的同时也会增加CPU运算量。YieldingWaitStrategy策略会循环等待sequence增加到合适的值。循环中调用Thread.yield()允许其他准备好的线程执行。如果需要高性能而且事件消费者线程比逻辑内核少的时候，推荐使用YieldingWaitStrategy策略。例如：在开启超线程的时候\n4. BusySpinWaitStrategy:BusySpinWaitStrategy是性能最高的等待策略，同时也是对部署环境要求最高的策略。这个性能最好用在事件处理线程比物理内核数目还要小的时候。例如：在禁用超线程技术的时候。\n\n使用的时候需要根据自己的实际需求选择。\n","slug":"LMAX-Distruptor","published":1,"updated":"2016-02-25T07:28:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3fw9ju000bjhzd7mwn16ug"},{"title":"K-近临算法","date":"2016-02-24T16:14:52.000Z","_content":"\nK-近临算法，有叫KNN算法，机器学习常用的一种算法，用于对多个维度的信息进行归类，打标签, 指纹识别，手写数字识别，人脸识别等。算法的特点是简单易懂， 适用数据范围是数值型和标称型，缺点是效率不高。\n\n基本思路如下:\n1. 遍历样本中的每一条信息，并计算与当前待分类信息的距离。这里利用的是欧氏距离公式。\n2. 按照距离递增次序排序\n3. 选取与当前点距离最小的K个点\n4. 确定前K个点所在类别的出现频率\n5. 返回前N个点出现频率最高的类别作为当前点的预测分类\n\n然后可以和测试样本中的数据进行比对，并计算错误率，完美分类器的错误率为0 , 最差分类器的错误率是1。\n\n此外当样本不平衡时，如一个类的样本容量很大，而其他类样本容量很小时，有可能导致当输入一个新样本时，该样本的K个邻居中大容量类的样本占多数。\n\n当各个维度不是平等的话，更有用的做法是对数据添加权值(Weight)， 如权值与距离成反比。\n\n可以使用Matplotlib对数据做比较直观的呈现","source":"_posts/K-近临算法.md","raw":"---\ntitle: K-近临算法\ndate: 2016-02-25 00:14:52\ntags: 机器学习\n---\n\nK-近临算法，有叫KNN算法，机器学习常用的一种算法，用于对多个维度的信息进行归类，打标签, 指纹识别，手写数字识别，人脸识别等。算法的特点是简单易懂， 适用数据范围是数值型和标称型，缺点是效率不高。\n\n基本思路如下:\n1. 遍历样本中的每一条信息，并计算与当前待分类信息的距离。这里利用的是欧氏距离公式。\n2. 按照距离递增次序排序\n3. 选取与当前点距离最小的K个点\n4. 确定前K个点所在类别的出现频率\n5. 返回前N个点出现频率最高的类别作为当前点的预测分类\n\n然后可以和测试样本中的数据进行比对，并计算错误率，完美分类器的错误率为0 , 最差分类器的错误率是1。\n\n此外当样本不平衡时，如一个类的样本容量很大，而其他类样本容量很小时，有可能导致当输入一个新样本时，该样本的K个邻居中大容量类的样本占多数。\n\n当各个维度不是平等的话，更有用的做法是对数据添加权值(Weight)， 如权值与距离成反比。\n\n可以使用Matplotlib对数据做比较直观的呈现","slug":"K-近临算法","published":1,"updated":"2016-02-25T05:41:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3fw9jw000djhzdv5wof1ds"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cil3fw9j90002jhzdlqhwtjmn","tag_id":"cil3fw9jl0003jhzdpj738ngg","_id":"cil3fw9jn0004jhzde7fhqaxt"},{"post_id":"cil3fw9jp0005jhzdb7jgvspa","tag_id":"cil3fw9jp0006jhzdszy0cv92","_id":"cil3fw9jq0007jhzdo8ng1e2f"},{"post_id":"cil3fw9jr0008jhzdw2n6p5y8","tag_id":"cil3fw9js0009jhzdq5v1ql4x","_id":"cil3fw9jt000ajhzd9z47d99g"},{"post_id":"cil3fw9ju000bjhzd7mwn16ug","tag_id":"cil3fw9jp0006jhzdszy0cv92","_id":"cil3fw9jv000cjhzdzp54nmal"},{"post_id":"cil3fw9jw000djhzdv5wof1ds","tag_id":"cil3fw9jl0003jhzdpj738ngg","_id":"cil3fw9jx000ejhzdbmt11q8o"}],"Tag":[{"name":"机器学习","_id":"cil3fw9jl0003jhzdpj738ngg"},{"name":"Java","_id":"cil3fw9jp0006jhzdszy0cv92"},{"name":"数据库","_id":"cil3fw9js0009jhzdq5v1ql4x"}]}}